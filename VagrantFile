# -*- mode: ruby -*-
# vi: set ft=ruby :

ANSIBLE_PATH = __dir__

require 'yaml'
vconfig = YAML.load_file("#{ANSIBLE_PATH}/vagrant.default.yml")

Vagrant.configure("2") do |config|
  config.vm.define "prometheus" do |prometheus|
    prometheus.vm.box = vconfig.fetch('vagrant_box')

    # Fix for: "stdin: is not a tty"
    # https://github.com/mitchellh/vagrant/issues/1673#issuecomment-28288042
    prometheus.ssh.shell = %{bash -c 'BASH_ENV=/etc/profile exec bash'}

    prometheus.vm.provider "virtualbox" do |vb|
      vb.name = vconfig.fetch('vagrant_prometheus_hostname')
      vb.cpus = vconfig.fetch('vagrant_cpus')
      vb.memory = vconfig.fetch('vagrant_memory')
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    prometheus.vm.network :private_network, ip: vconfig.fetch('vagrant_prometheus_ip')
    prometheus.vm.hostname = vconfig.fetch('vagrant_prometheus_hostname')

    prometheus.vm.provision "shell" do |s|
      s.inline = "apt install -y python"
    end
  end

  config.vm.define "node" do |node|
    node.vm.box = vconfig.fetch('vagrant_box')

    # Fix for: "stdin: is not a tty"
    # https://github.com/mitchellh/vagrant/issues/1673#issuecomment-28288042
    node.ssh.shell = %{bash -c 'BASH_ENV=/etc/profile exec bash'}

    node.vm.provider "virtualbox" do |vb|
      vb.name = vconfig.fetch('vagrant_node_hostname')
      vb.cpus = vconfig.fetch('vagrant_cpus')
      vb.memory = vconfig.fetch('vagrant_memory')
      vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      vb.customize ["modifyvm", :id, "--ioapic", "on"]
    end

    node.vm.network :private_network, ip: vconfig.fetch('vagrant_node_ip')
    node.vm.hostname = vconfig.fetch('vagrant_node_hostname')

    node.vm.provision "shell" do |s|
      s.inline = "apt install -y python"
    end
  end

  config.vm.provision :ansible do |ansible|
    ansible.verbose = "v"
    ansible.playbook = "playbook.yml"
    ansible.sudo = true

    ansible.groups = {
      'development' => ['prometheus', 'node'],
      'prometheus' => ['prometheus'],
      'node' => ['prometheus', 'node']
    }
  end

  if Vagrant.has_plugin?('vagrant-hostmanager')
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
  else
    fail_with_message "vagrant-hostmanager missing, please install the plugin with this command:\nvagrant plugin install vagrant-hostmanager"
  end
end
